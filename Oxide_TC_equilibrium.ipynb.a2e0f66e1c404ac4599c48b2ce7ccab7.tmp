from matplotlib.ticker import ScalarFormatter

# Define the colormaps for each phase
colormaps = {
    'HEMATITE': 'Greens',
    'MAGNETITE': 'Blues',
    'WUSTITE': 'Purples',
    'BCC_A2': 'YlOrBr',
    'LIQUID': 'RdPu'
}

# Create a new figure with subplots
fig, axs = plt.subplots(nrows=1, ncols=len(
    Gmin_phase_list), figsize=(3.4 * len(Gmin_phase_list), 3), sharex=True, sharey=True)

for i, phase in enumerate(Gmin_phase_list):

    sc = axs[i].scatter(df_Gmin['lnacr_o'], df_Gmin['T'],
                        c=df_Gmin[f'gm({phase})'], cmap=colormaps[phase], s=5, alpha=0.6)

    cbar = plt.colorbar(sc, ax=axs[i])

    # Change colorbar numbering to scientific notation
    formatter = ScalarFormatter(useMathText=True)
    formatter.set_scientific(True)
    formatter.set_powerlimits((-1, 1))
    cbar.ax.yaxis.set_major_formatter(formatter)

    # Label the colorbar of the last plot only
    if i == len(Gmin_phase_list) - 1:
        cbar.set_label('molar Gibbs energy (J/mol)', fontsize=14)

    axs[i].set_xlabel('LN O activity', fontsize=14)
    axs[i].set_ylabel('T (K)', fontsize=14)
    axs[i].set_xlim([min(df_Gmin['lnacr_o']), max(df_Gmin['lnacr_o'])])
    axs[i].set_ylim([min(df_Gmin['T']), max(df_Gmin['T'])])
    axs[i].grid(True, which='both', linestyle='--', linewidth=0.5)
    axs[i].set_title(f'{phase}')
    # axs[i].set_aspect('equal', 'box')

fig.tight_layout()
fig.savefig('Oxide_TC_Gm_phases.png',
            format='png', dpi=300, bbox_inches='tight')

plt.show()